<Window x:Class="WPFTicTacToe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:wpfTicTacToe="clr-namespace:WPFTicTacToe"
        xmlns:viewModelLocator="http:\\www.codeplex.com\MEFedMVVM"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:WPFTicTacToe.Controls"
        xmlns:converters="clr-namespace:WPFTicTacToe.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        viewModelLocator:ViewModelLocator.ViewModel="Main"
        WindowStartupLocation="CenterScreen"
        Title="Tic Tac Toe" Height="623.333" Width="
        11.688"
        d:DataContext="{d:DesignInstance wpfTicTacToe:MainWindowViewModel}">
    <Window.Resources>
        <converters:Bool2VisibilityHiddenConverter x:Key="Bool2VisibilityHiddenConverter" />
        <converters:InverseBool2VisibilityConverter x:Key="InverseBool2VisibilityConverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Viewbox MinWidth="300" MinHeight="300" Grid.Column="1" Margin="20"
                 Visibility="{Binding IsInitialized, Converter={StaticResource Bool2VisibilityHiddenConverter}}"
                 DataContext="{Binding MatchViewModel}">
            <controls:TicTacToeControl IsHitTestVisible="{Binding IsMatchRunning}"
                                       Board="{Binding Board}"
                                       HighlightedSquares="{Binding HighlightedSquares}"
                                       PlayerPieceMapping="{Binding PlayerPieceMapping}">
                <controls:TicTacToeControl.Style>
                    <Style TargetType="{x:Type Control}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMatchRunning}" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:TicTacToeControl.Style>
            </controls:TicTacToeControl>
        </Viewbox>
        <StatusBar DataContext="{Binding MatchViewModel}" VerticalAlignment="Bottom" Grid.Row="1" Grid.ColumnSpan="2"
                   Grid.Column="0">
            <TextBlock FontSize="18"
                       Visibility="{Binding IsMatchRunning, Converter={StaticResource Bool2VisibilityHiddenConverter}}">
                <TextBlock.Text>
                    <Binding Path="PlayerInTurn.Name" StringFormat="It's {0}'s turn" />
                </TextBlock.Text>
            </TextBlock>
        </StatusBar>
        <StackPanel Grid.Row="0" Grid.Column="0" Margin="8">
            <Button Command="{Binding StartMatchCommand}" Content="Start new match"
                    Height="38" Margin="10" Padding="10" VerticalAlignment="Top" />
            <controls:StatsControl IsEnabled="{Binding IsEnabled}"
                                   DataContext="{Binding MatchViewModel.GameStatsViewModel}" />
            <Expander Header="Game Settings" IsExpanded="True">
                <ItemsControl DataContext="{Binding SettingsViewModel}">
                    <GroupBox Header="Player 1">
                        <controls:PlayerConfigurationControl DataContext="{Binding FirstPlayer}" />
                    </GroupBox>
                    <GroupBox Header="Player 2">
                        <controls:PlayerConfigurationControl DataContext="{Binding SecondPlayer}" />
                    </GroupBox>
                </ItemsControl>
            </Expander>
        </StackPanel>
        <controls:OutlinedTextBlock TextWrapping="Wrap"
                                    Stroke="#8D5B22"
                                    Fill="#F1F063"
                                    StrokeThickness="2" FontWeight="ExtraBold"
                                    Visibility="{Binding MatchViewModel.IsMatchRunning, Converter={StaticResource InverseBool2VisibilityConverter}}"
                                    FontSize="40" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"
                                    TextAlignment="Center">
            <controls:OutlinedTextBlock.Effect>
                <DropShadowEffect ShadowDepth="0"
                                  Color="White"
                                  Opacity="1"
                                  BlurRadius="12" />
            </controls:OutlinedTextBlock.Effect>
            <controls:OutlinedTextBlock.Style>
                <Style TargetType="{x:Type controls:OutlinedTextBlock}">
                    <Setter Property="Text" Value="Press Start Match to play!" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MatchViewModel.IsInitialized}" Value="True" />
                                <Condition Binding="{Binding MatchViewModel.IsMatchRunning}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Text" Value="{Binding MatchViewModel.Winner, StringFormat='{}{0} is the Winner!'}" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MatchViewModel.IsInitialized}" Value="True" />
                                <Condition Binding="{Binding MatchViewModel.IsMatchRunning}" Value="False" />
                                <Condition Binding="{Binding MatchViewModel.Winner}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Text" Value="It's a Draw!" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:OutlinedTextBlock.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseDown">
                    <i:InvokeCommandAction Command="{Binding StartMatchCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </controls:OutlinedTextBlock>
    </Grid>
</Window>